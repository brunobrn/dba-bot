apiVersion: v1
kind: ServiceAccount
metadata:
  name: dba-runner-sa
  namespace: dba-bot
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dba-bot
  name: secret-reader
rules:
- apiGroups: ["", "extensions", "apps", "batch"]
  resources: ["*"]
  verbs: ["*"]
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dba-bot
  name: pod-creator
rules:
- apiGroups: ["", "extensions", "apps", "batch"]
  resources: ["*"]
  verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: secret-reader-binding
  namespace: dba-bot
subjects:
- kind: User
  name: my-user
  apiGroup: rbac.authorization.k8s.io
- kind: ServiceAccount
  name: dba-runner-sa
  namespace: dba-bot
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-creator-binding
  namespace: dba-bot
subjects:
- kind: ServiceAccount
  name: dba-runner-sa
  namespace: dba-bot
roleRef:
  kind: Role
  name: pod-creator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-reader-dba-runner
rules:
- apiGroups: ["", "extensions", "apps", "batch"]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: read-secrets-global-dba-ruuner2
subjects:
- kind: Group
  name: manager
  apiGroup: rbac.authorization.k8s.io
- kind: ServiceAccount
  name: dba-runner-sa
  namespace: dba-bot
roleRef:
  kind: ClusterRole
  name: secret-reader-dba-runner
  apiGroup: rbac.authorization.k8s.io
